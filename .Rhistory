dat2<-read.csv("2021_gpc_nonbackcrossed.csv")
colnames(dat2)
dat2$rep<-factor(dat2$rep)
dat2$group<-factor(dat2$group)
dat2$counts.f<-ordered(dat2$counts)
dat2$counts<-as.integer(dat2$counts)
dat2$freq<-as.integer(dat2$freq)
sapply(dat2, class)
dat2$rep.id<-dat2$rep:dat2$group
length(levels(dat2$rep.id))
head(dat2)
# THE FITTING FUNCTION REQUIRES DISAGGREGATED DATA
dat2.disag<-dat2[rep(1:nrow(dat2),dat2[,2]),-2]
head(dat2.disag)
aggregate(dat2$freq~dat2$rep.id,FUN=sum)
aggregate(dat2.disag$counts~dat2.disag$rep.id,FUN=length)
##############################
# NEGATIVE BINOMIAL REGRESSION
##############################
nb02<-glm.nb(counts~1,data=dat2.disag) #MUST BE FITTED BEFORE LOADING GLMMadaptive TO PREVENT MASKING
##############################
# NEGATIVE BINOMIAL REGRESSION
##############################
library(MASS)
nb02<-glm.nb(counts~1,data=dat2.disag) #MUST BE FITTED BEFORE LOADING GLMMadaptive TO PREVENT MASKING
library(GLMMadaptive); library(emmeans)
nb12<-mixed_model(counts~1,~1|rep.id,data=dat2.disag,family=negative.binomial)
nb22<-mixed_model(counts~group,~1|rep.id,data=dat2.disag,family=negative.binomial)
anova(nb12,nb02) #TEST OF RANDOM EFFECT COMPONENT, RESULTING P-VALUE MUST BE HALVED
# IGNORE WARNING, IT'S CAUSED BY MASKING
anova(nb12,nb22) #TEST OF FIXED EFFECT ADJUSTED FOR RANDOM EFFECT
# MUST REGRID, OR THE ARG type IS IGNORED
nb2r2<-update(ref_grid(nb22),tran='log')
emmeans(nb2r2,~group,type='response') # PREDICTED MEAN COUNT
pairs(emmeans(nb2r2,~group,type='response'),inf=T)
pairs(emmeans(nb2r2,~group,type='response'),rev=T,inf=T)
# ILLUSTRATE FITTED CONDITIONAL DISTRIBUTIONS
theta2<-exp(nb22$phis); theta2
# INFORMAL GOODNESS OF FIT CRITERION, e.g. FROM GBUR ET AL 2012, SECTION 5.4, PAGE 128
# SUM OF CONDITIONAL PEARSON RESIDUALS SQUARED / MODEL DF
# A RATIO >>1 SUGGESTS MORE OBSERVED VARIANCE THAN EXPECTED FROM A MODEL
dat2.disag$pred.ss<-predict(nb22,dat2.disag,type='sub')
dat2.disag$pearson<-(dat2.disag$counts-dat2.disag$pred.ss)/sqrt(dat2.disag$pred.ss+dat2.disag$pred.ss^2/theta2)
pearchi22<-sum(dat2.disag$pearson^2)
pearchi22/nobs(nb22)
pairs(emmeans(nb2r2,~group,type='response'),inf=T)
dat2<-read.csv("2021_gpc_backcrossed.csv")
colnames(dat2)
dat2$rep<-factor(dat2$rep)
dat2$group<-factor(dat2$group)
dat2$counts.f<-ordered(dat2$counts)
dat2$counts<-as.integer(dat2$counts)
dat2$freq<-as.integer(dat2$freq)
sapply(dat2, class)
dat2$rep.id<-dat2$rep:dat2$group
length(levels(dat2$rep.id))
head(dat2)
# THE FITTING FUNCTION REQUIRES DISAGGREGATED DATA
dat2.disag<-dat2[rep(1:nrow(dat2),dat2[,2]),-2]
head(dat2.disag)
aggregate(dat2$freq~dat2$rep.id,FUN=sum)
aggregate(dat2.disag$counts~dat2.disag$rep.id,FUN=length)
nb02<-glm.nb(counts~1,data=dat2.disag) #MUST BE FITTED BEFORE LOADING GLMMadaptive TO PREVENT MASKING
nb12<-mixed_model(counts~1,~1|rep.id,data=dat2.disag,family=negative.binomial)
nb22<-mixed_model(counts~group,~1|rep.id,data=dat2.disag,family=negative.binomial)
anova(nb12,nb02) #TEST OF RANDOM EFFECT COMPONENT, RESULTING P-VALUE MUST BE HALVED
# IGNORE WARNING, IT'S CAUSED BY MASKING
anova(nb12,nb22) #TEST OF FIXED EFFECT ADJUSTED FOR RANDOM EFFECT
# MUST REGRID, OR THE ARG type IS IGNORED
nb2r2<-update(ref_grid(nb22),tran='log')
emmeans(nb2r2,~group,type='response') # PREDICTED MEAN COUNT
pairs(emmeans(nb2r2,~group,type='response'),inf=T)
pairs(emmeans(nb2r2,~group,type='response'),rev=T,inf=T)
# ILLUSTRATE FITTED CONDITIONAL DISTRIBUTIONS
theta2<-exp(nb22$phis); theta2
# INFORMAL GOODNESS OF FIT CRITERION, e.g. FROM GBUR ET AL 2012, SECTION 5.4, PAGE 128
# SUM OF CONDITIONAL PEARSON RESIDUALS SQUARED / MODEL DF
# A RATIO >>1 SUGGESTS MORE OBSERVED VARIANCE THAN EXPECTED FROM A MODEL
dat2.disag$pred.ss<-predict(nb22,dat2.disag,type='sub')
dat2.disag$pearson<-(dat2.disag$counts-dat2.disag$pred.ss)/sqrt(dat2.disag$pred.ss+dat2.disag$pred.ss^2/theta2)
pearchi22<-sum(dat2.disag$pearson^2)
pearchi22/nobs(nb22)
dat<-read.csv("2021_gpc_nonbackcrossed.csv")
dat$rep<-factor(dat$rep)
dat$group<-factor(dat$group)
dat$counts.f<-ordered(dat$counts)
colnames(dat)
# MAKE UNIQUE REP ID FOR 3 BIOLOGICAL REPS IN EACH OF 4 GENOTYPE GROUPS
dat$rep.id<-dat$rep:dat$group
length(levels(dat$rep.id))
head(dat)
# THE FITTING FUNCTION REQUIRES DISAGGREGATED DATA
dat.disag<-dat[rep(1:nrow(dat),dat[,2]),-2]
head(dat.disag)
aggregate(dat$freq~dat$rep.id,FUN=sum)
aggregate(dat.disag$counts~dat.disag$rep.id,FUN=length)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS");
options(repos = c(CRAN = "https://cloud.r-project.org"))
## Default repo
local({r <- getOption("repos")
r["CRAN"] <- "http://cran.r-project.org"
options(repos=r)
})
